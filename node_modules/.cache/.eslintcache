[{"/home/mutahir/Downloads/BlockChain/truffleBase/truffle/client/src/index.js":"1","/home/mutahir/Downloads/BlockChain/truffleBase/truffle/client/src/reportWebVitals.js":"2","/home/mutahir/Downloads/BlockChain/truffleBase/truffle/client/src/App.js":"3","/home/mutahir/Downloads/BlockChain/truffleBase/truffle/client/src/store/store.js":"4","/home/mutahir/Downloads/BlockChain/truffleBase/truffle/client/src/store/connectSlice.js":"5"},{"size":625,"mtime":1631186790341,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1631186790341,"results":"8","hashOfConfig":"7"},{"size":1792,"mtime":1631186790341,"results":"9","hashOfConfig":"7"},{"size":407,"mtime":1631188336048,"results":"10","hashOfConfig":"7"},{"size":2264,"mtime":1631187979479,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"n17jrb",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mutahir/Downloads/BlockChain/truffleBase/truffle/client/src/index.js",[],["24","25"],"/home/mutahir/Downloads/BlockChain/truffleBase/truffle/client/src/reportWebVitals.js",[],"/home/mutahir/Downloads/BlockChain/truffleBase/truffle/client/src/App.js",["26","27"],"import logo from './logo.svg';\nimport './App.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { web3init, web3Reload } from './store/connectSlice';\n\nfunction App() {\n  const address = useSelector((state) => {\n    return state.connectReducer.address\n  })\n  const accessMsg = useSelector((state) => {\n    return state.connectReducer.msg\n  })\n\n  const [name, setName] = useState(null)\n  const [email, setEmail] = useState(null)\n\n  const web3 = useSelector((state) => {\n    return state.connectReducer.web3\n  })\n  const dispatch = useDispatch()\n  const signmsg = async () => {\n    if (name != null && email != null) {\n      return await web3.eth.personal.sign(web3.utils.utf8ToHex(name) + web3.utils.utf8ToHex(email), address, \"test password!\")\n    }\n  }\n  useEffect(() => {\n    dispatch(web3Reload())\n\n  }, []);\n\n  // const currentAccount = async () => {\n  //   await web3.personal.sign(web3.fromUtf8(\"Hello from Toptal!\"), web3.eth.coinbase, console.log);\n\n  // }\n\n  const connectWallet = () => {\n    console.log(\"button\")\n\n    dispatch(web3init())\n    console.log(address)\n\n  }\n\n  console.log(address)\n\n  return (\n    <div className=\"App\">\n      Address<br></br>\n      {address}<br></br>\n      {name}\n      <label>Sign-Up Form</label>\n      <div>\n        Name <input type='text' onChange={(e) => {\n          e.preventDefault()\n          setName(e.target.value)\n        }} required ></input>\n      </div>\n      <div>\n        Email <input type='text' onChange={(e) => setEmail(e.target.value)} required ></input>\n      </div>\n      <button onClick={() => connectWallet()}>Connect</button>\n      <button onClick={async () => signmsg()}>Sign</button><br></br>\n      <div>{accessMsg}</div>\n\n\n\n    </div >\n  );\n}\n\nexport default App;\n","/home/mutahir/Downloads/BlockChain/truffleBase/truffle/client/src/store/store.js",["28","29"],"/home/mutahir/Downloads/BlockChain/truffleBase/truffle/client/src/store/connectSlice.js",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":1,"column":8,"nodeType":"36","messageId":"37","endLine":1,"endColumn":12},{"ruleId":"38","severity":1,"message":"39","line":30,"column":6,"nodeType":"40","endLine":30,"endColumn":8,"suggestions":"41"},{"ruleId":"34","severity":1,"message":"42","line":1,"column":26,"nodeType":"36","messageId":"37","endLine":1,"endColumn":46},{"ruleId":"34","severity":1,"message":"43","line":2,"column":10,"nodeType":"36","messageId":"37","endLine":2,"endColumn":21},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["46"],"'getDefaultMiddleware' is defined but never used.","'createStore' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"47","fix":"48"},"Update the dependencies array to be: [dispatch]",{"range":"49","text":"50"},[869,871],"[dispatch]"]